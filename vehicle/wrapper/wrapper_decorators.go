package wrapper

// Code generated by github.com/andig/cmd/tools/decorate.go. DO NOT EDIT.

import (
	"github.com/andig/evcc/api"
	"time"
)

func decorateVehicle(base api.Vehicle, chargeState func() (api.ChargeStatus, error), vehicleFinishTimer func() (time.Time, error), vehicleRange func() (int64, error), vehicleClimater func() (bool, float64, float64, error)) api.Vehicle {
	switch {
	case chargeState == nil && vehicleClimater == nil && vehicleFinishTimer == nil && vehicleRange == nil:
		return base

	case chargeState != nil && vehicleClimater == nil && vehicleFinishTimer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
		}

	case chargeState == nil && vehicleClimater == nil && vehicleFinishTimer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleFinishTimer
		}{
			Vehicle: base,
			VehicleFinishTimer: &decorateVehicleVehicleFinishTimerImpl{
				vehicleFinishTimer: vehicleFinishTimer,
			},
		}

	case chargeState != nil && vehicleClimater == nil && vehicleFinishTimer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleFinishTimer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleFinishTimer: &decorateVehicleVehicleFinishTimerImpl{
				vehicleFinishTimer: vehicleFinishTimer,
			},
		}

	case chargeState == nil && vehicleClimater == nil && vehicleFinishTimer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && vehicleClimater == nil && vehicleFinishTimer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && vehicleClimater == nil && vehicleFinishTimer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleFinishTimer
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleFinishTimer: &decorateVehicleVehicleFinishTimerImpl{
				vehicleFinishTimer: vehicleFinishTimer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && vehicleClimater == nil && vehicleFinishTimer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleFinishTimer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleFinishTimer: &decorateVehicleVehicleFinishTimerImpl{
				vehicleFinishTimer: vehicleFinishTimer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && vehicleClimater != nil && vehicleFinishTimer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleClimater
		}{
			Vehicle: base,
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState != nil && vehicleClimater != nil && vehicleFinishTimer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleClimater
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState == nil && vehicleClimater != nil && vehicleFinishTimer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleClimater
			api.VehicleFinishTimer
		}{
			Vehicle: base,
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleFinishTimer: &decorateVehicleVehicleFinishTimerImpl{
				vehicleFinishTimer: vehicleFinishTimer,
			},
		}

	case chargeState != nil && vehicleClimater != nil && vehicleFinishTimer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleClimater
			api.VehicleFinishTimer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleFinishTimer: &decorateVehicleVehicleFinishTimerImpl{
				vehicleFinishTimer: vehicleFinishTimer,
			},
		}

	case chargeState == nil && vehicleClimater != nil && vehicleFinishTimer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && vehicleClimater != nil && vehicleFinishTimer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && vehicleClimater != nil && vehicleFinishTimer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleClimater
			api.VehicleFinishTimer
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleFinishTimer: &decorateVehicleVehicleFinishTimerImpl{
				vehicleFinishTimer: vehicleFinishTimer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && vehicleClimater != nil && vehicleFinishTimer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleClimater
			api.VehicleFinishTimer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleFinishTimer: &decorateVehicleVehicleFinishTimerImpl{
				vehicleFinishTimer: vehicleFinishTimer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}
	}

	return nil
}

type decorateVehicleChargeStateImpl struct {
	chargeState func() (api.ChargeStatus, error)
}

func (impl *decorateVehicleChargeStateImpl) Status() (api.ChargeStatus, error) {
	return impl.chargeState()
}

type decorateVehicleVehicleClimaterImpl struct {
	vehicleClimater func() (bool, float64, float64, error)
}

func (impl *decorateVehicleVehicleClimaterImpl) Climater() (bool, float64, float64, error) {
	return impl.vehicleClimater()
}

type decorateVehicleVehicleFinishTimerImpl struct {
	vehicleFinishTimer func() (time.Time, error)
}

func (impl *decorateVehicleVehicleFinishTimerImpl) FinishTime() (time.Time, error) {
	return impl.vehicleFinishTimer()
}

type decorateVehicleVehicleRangeImpl struct {
	vehicleRange func() (int64, error)
}

func (impl *decorateVehicleVehicleRangeImpl) Range() (int64, error) {
	return impl.vehicleRange()
}
