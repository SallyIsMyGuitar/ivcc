package vehicle

// Code generated by github.com/evcc-io/evcc/cmd/tools/decorate.go. DO NOT EDIT.

import (
	"github.com/evcc-io/evcc/api"
)

func decorateVehicle(base api.Vehicle, chargeState func() (api.ChargeStatus, error), vehicleRange func() (int64, error), vehicleOdometer func() (float64, error), vehicleClimater func() (bool, error), currentController func(int64) error, resurrector func() error, vehicleChargeController func() error, vehicleChargeControllerStopCharge func() error) api.Vehicle {
	switch {
	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return base

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleOdometer
		}{
			Vehicle: base,
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleClimater
		}{
			Vehicle: base,
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleClimater
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleOdometer
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleClimater
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleClimater
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.Resurrector
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleRange
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleOdometer
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleClimater
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleClimater
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleOdometer
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleClimater
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleClimater
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController == nil && vehicleChargeControllerStopCharge == nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleChargeController
		}{
			Vehicle: base,
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleChargeController
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleChargeController
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleChargeController
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleChargeController
			api.VehicleOdometer
		}{
			Vehicle: base,
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleChargeController
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleChargeController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleChargeController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleChargeController
			api.VehicleClimater
		}{
			Vehicle: base,
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleChargeController
			api.VehicleClimater
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleChargeController
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleChargeController
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleChargeController
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleChargeController
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleChargeController
			api.VehicleOdometer
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleChargeController
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleChargeController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleChargeController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleChargeController
			api.VehicleClimater
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleChargeController
			api.VehicleClimater
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector == nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleChargeController
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleChargeController
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleChargeController
			api.VehicleRange
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleChargeController
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleChargeController
			api.VehicleOdometer
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleChargeController
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleChargeController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleChargeController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController == nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleOdometer
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater == nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer == nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange == nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
		}

	case chargeState == nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}

	case chargeState != nil && currentController != nil && resurrector != nil && vehicleChargeController != nil && vehicleChargeControllerStopCharge != nil && vehicleClimater != nil && vehicleOdometer != nil && vehicleRange != nil:
		return &struct {
			api.Vehicle
			api.ChargeState
			api.CurrentController
			api.Resurrector
			api.VehicleChargeController
			api.VehicleClimater
			api.VehicleOdometer
			api.VehicleRange
		}{
			Vehicle: base,
			ChargeState: &decorateVehicleChargeStateImpl{
				chargeState: chargeState,
			},
			CurrentController: &decorateVehicleCurrentControllerImpl{
				currentController: currentController,
			},
			Resurrector: &decorateVehicleResurrectorImpl{
				resurrector: resurrector,
			},
			VehicleChargeController: &decorateVehicleVehicleChargeControllerImpl{
				vehicleChargeController:           vehicleChargeController,
				vehicleChargeControllerStopCharge: vehicleChargeControllerStopCharge,
			},
			VehicleClimater: &decorateVehicleVehicleClimaterImpl{
				vehicleClimater: vehicleClimater,
			},
			VehicleOdometer: &decorateVehicleVehicleOdometerImpl{
				vehicleOdometer: vehicleOdometer,
			},
			VehicleRange: &decorateVehicleVehicleRangeImpl{
				vehicleRange: vehicleRange,
			},
		}
	}

	return nil
}

type decorateVehicleChargeStateImpl struct {
	chargeState func() (api.ChargeStatus, error)
}

func (impl *decorateVehicleChargeStateImpl) Status() (api.ChargeStatus, error) {
	return impl.chargeState()
}

type decorateVehicleCurrentControllerImpl struct {
	currentController func(int64) error
}

func (impl *decorateVehicleCurrentControllerImpl) MaxCurrent(p0 int64) error {
	return impl.currentController(p0)
}

type decorateVehicleResurrectorImpl struct {
	resurrector func() error
}

func (impl *decorateVehicleResurrectorImpl) WakeUp() error {
	return impl.resurrector()
}

type decorateVehicleVehicleChargeControllerImpl struct {
	vehicleChargeController           func() error
	vehicleChargeControllerStopCharge func() error
}

func (impl *decorateVehicleVehicleChargeControllerImpl) StartCharge() error {
	return impl.vehicleChargeController()
}
func (impl *decorateVehicleVehicleChargeControllerImpl) StopCharge() error {
	return impl.vehicleChargeControllerStopCharge()
}

type decorateVehicleVehicleClimaterImpl struct {
	vehicleClimater func() (bool, error)
}

func (impl *decorateVehicleVehicleClimaterImpl) Climater() (bool, error) {
	return impl.vehicleClimater()
}

type decorateVehicleVehicleOdometerImpl struct {
	vehicleOdometer func() (float64, error)
}

func (impl *decorateVehicleVehicleOdometerImpl) Odometer() (float64, error) {
	return impl.vehicleOdometer()
}

type decorateVehicleVehicleRangeImpl struct {
	vehicleRange func() (int64, error)
}

func (impl *decorateVehicleVehicleRangeImpl) Range() (int64, error) {
	return impl.vehicleRange()
}
