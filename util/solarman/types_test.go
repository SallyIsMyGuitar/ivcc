package solarman

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func TestReadHoldingRegisters(t *testing.T) {
	bytes := NewSolarmanRequestBuilder(0x01, 0x01).SetLoggerSerial(1234567891).ReadHoldingRegistersRequest(3, 5)
	expected := []byte{
		0xa5, 0x17, 0x00, 0x10, 0x45, 0x01, 0x00, 0xd3, 0x02, 0x96, 0x49, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x03, 0x00, 0x05, 0x75, 0xc9, 0x6d, 0x15,
	}
	require.Equal(t, expected, bytes)
}

func TestReadCoils(t *testing.T) {
	bytes := NewSolarmanRequestBuilder(0x01, 0x01).SetLoggerSerial(1234567891).ReadCoilsRequest(3, 5)
	expected := []byte{0xa5, 0x17, 0x0, 0x10, 0x45, 0x1, 0x0, 0xd3, 0x2, 0x96, 0x49, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x3, 0x0, 0x5, 0xc, 0x9, 0x42, 0x15}
	require.Equal(t, expected, bytes)
}

func TestReadInputRegistersRequest(t *testing.T) {
	bytes := NewSolarmanRequestBuilder(0x01, 0x01).SetLoggerSerial(1234567891).ReadInputRegistersRequest(3, 5)
	expected := []byte{0xa5, 0x17, 0x0, 0x10, 0x45, 0x1, 0x0, 0xd3, 0x2, 0x96, 0x49, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x4, 0x0, 0x3, 0x0, 0x5, 0xc0, 0x9, 0xf9, 0x15}
	require.Equal(t, expected, bytes)
}

func TestWriteMultipleRegistersRquest(t *testing.T) {
	bytes := NewSolarmanRequestBuilder(0x01, 0xee).SetLoggerSerial(1234567891).WriteMultipleRegistersRquest(5, 4, []byte{0x01, 0x01, 0x01, 0x01})
	expected := []byte{0xa5, 0x20, 0x00, 0x10, 0x45, 0xee, 0x00, 0xd3, 0x02, 0x96, 0x49, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x05, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x07, 0x76, 0xbc, 0x15}
	require.Equal(t, expected, bytes)
}
