package charger

// Code generated by github.com/evcc-io/evcc/cmd/tools/decorate.go. DO NOT EDIT.

import (
	"github.com/evcc-io/evcc/api"
)

func decorateCustom(base *Charger, chargerEx func(float64) error, identifier func() (string, error), phaseController func(int) error, resurrector func() error, battery func() (float64, error)) api.Charger {
	switch {
	case battery == nil && chargerEx == nil && identifier == nil && phaseController == nil && resurrector == nil:
		return base

	case battery == nil && chargerEx != nil && identifier == nil && phaseController == nil && resurrector == nil:
		return &struct {
			*Charger
			api.ChargerEx
		}{
			Charger: base,
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
		}

	case battery == nil && chargerEx == nil && identifier != nil && phaseController == nil && resurrector == nil:
		return &struct {
			*Charger
			api.Identifier
		}{
			Charger: base,
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
		}

	case battery == nil && chargerEx != nil && identifier != nil && phaseController == nil && resurrector == nil:
		return &struct {
			*Charger
			api.ChargerEx
			api.Identifier
		}{
			Charger: base,
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
		}

	case battery == nil && chargerEx == nil && identifier == nil && phaseController != nil && resurrector == nil:
		return &struct {
			*Charger
			api.PhaseController
		}{
			Charger: base,
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
		}

	case battery == nil && chargerEx != nil && identifier == nil && phaseController != nil && resurrector == nil:
		return &struct {
			*Charger
			api.ChargerEx
			api.PhaseController
		}{
			Charger: base,
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
		}

	case battery == nil && chargerEx == nil && identifier != nil && phaseController != nil && resurrector == nil:
		return &struct {
			*Charger
			api.Identifier
			api.PhaseController
		}{
			Charger: base,
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
		}

	case battery == nil && chargerEx != nil && identifier != nil && phaseController != nil && resurrector == nil:
		return &struct {
			*Charger
			api.ChargerEx
			api.Identifier
			api.PhaseController
		}{
			Charger: base,
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
		}

	case battery == nil && chargerEx == nil && identifier == nil && phaseController == nil && resurrector != nil:
		return &struct {
			*Charger
			api.Resurrector
		}{
			Charger: base,
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery == nil && chargerEx != nil && identifier == nil && phaseController == nil && resurrector != nil:
		return &struct {
			*Charger
			api.ChargerEx
			api.Resurrector
		}{
			Charger: base,
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery == nil && chargerEx == nil && identifier != nil && phaseController == nil && resurrector != nil:
		return &struct {
			*Charger
			api.Identifier
			api.Resurrector
		}{
			Charger: base,
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery == nil && chargerEx != nil && identifier != nil && phaseController == nil && resurrector != nil:
		return &struct {
			*Charger
			api.ChargerEx
			api.Identifier
			api.Resurrector
		}{
			Charger: base,
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery == nil && chargerEx == nil && identifier == nil && phaseController != nil && resurrector != nil:
		return &struct {
			*Charger
			api.PhaseController
			api.Resurrector
		}{
			Charger: base,
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery == nil && chargerEx != nil && identifier == nil && phaseController != nil && resurrector != nil:
		return &struct {
			*Charger
			api.ChargerEx
			api.PhaseController
			api.Resurrector
		}{
			Charger: base,
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery == nil && chargerEx == nil && identifier != nil && phaseController != nil && resurrector != nil:
		return &struct {
			*Charger
			api.Identifier
			api.PhaseController
			api.Resurrector
		}{
			Charger: base,
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery == nil && chargerEx != nil && identifier != nil && phaseController != nil && resurrector != nil:
		return &struct {
			*Charger
			api.ChargerEx
			api.Identifier
			api.PhaseController
			api.Resurrector
		}{
			Charger: base,
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery != nil && chargerEx == nil && identifier == nil && phaseController == nil && resurrector == nil:
		return &struct {
			*Charger
			api.Battery
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
		}

	case battery != nil && chargerEx != nil && identifier == nil && phaseController == nil && resurrector == nil:
		return &struct {
			*Charger
			api.Battery
			api.ChargerEx
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
		}

	case battery != nil && chargerEx == nil && identifier != nil && phaseController == nil && resurrector == nil:
		return &struct {
			*Charger
			api.Battery
			api.Identifier
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
		}

	case battery != nil && chargerEx != nil && identifier != nil && phaseController == nil && resurrector == nil:
		return &struct {
			*Charger
			api.Battery
			api.ChargerEx
			api.Identifier
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
		}

	case battery != nil && chargerEx == nil && identifier == nil && phaseController != nil && resurrector == nil:
		return &struct {
			*Charger
			api.Battery
			api.PhaseController
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
		}

	case battery != nil && chargerEx != nil && identifier == nil && phaseController != nil && resurrector == nil:
		return &struct {
			*Charger
			api.Battery
			api.ChargerEx
			api.PhaseController
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
		}

	case battery != nil && chargerEx == nil && identifier != nil && phaseController != nil && resurrector == nil:
		return &struct {
			*Charger
			api.Battery
			api.Identifier
			api.PhaseController
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
		}

	case battery != nil && chargerEx != nil && identifier != nil && phaseController != nil && resurrector == nil:
		return &struct {
			*Charger
			api.Battery
			api.ChargerEx
			api.Identifier
			api.PhaseController
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
		}

	case battery != nil && chargerEx == nil && identifier == nil && phaseController == nil && resurrector != nil:
		return &struct {
			*Charger
			api.Battery
			api.Resurrector
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery != nil && chargerEx != nil && identifier == nil && phaseController == nil && resurrector != nil:
		return &struct {
			*Charger
			api.Battery
			api.ChargerEx
			api.Resurrector
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery != nil && chargerEx == nil && identifier != nil && phaseController == nil && resurrector != nil:
		return &struct {
			*Charger
			api.Battery
			api.Identifier
			api.Resurrector
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery != nil && chargerEx != nil && identifier != nil && phaseController == nil && resurrector != nil:
		return &struct {
			*Charger
			api.Battery
			api.ChargerEx
			api.Identifier
			api.Resurrector
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery != nil && chargerEx == nil && identifier == nil && phaseController != nil && resurrector != nil:
		return &struct {
			*Charger
			api.Battery
			api.PhaseController
			api.Resurrector
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery != nil && chargerEx != nil && identifier == nil && phaseController != nil && resurrector != nil:
		return &struct {
			*Charger
			api.Battery
			api.ChargerEx
			api.PhaseController
			api.Resurrector
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery != nil && chargerEx == nil && identifier != nil && phaseController != nil && resurrector != nil:
		return &struct {
			*Charger
			api.Battery
			api.Identifier
			api.PhaseController
			api.Resurrector
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}

	case battery != nil && chargerEx != nil && identifier != nil && phaseController != nil && resurrector != nil:
		return &struct {
			*Charger
			api.Battery
			api.ChargerEx
			api.Identifier
			api.PhaseController
			api.Resurrector
		}{
			Charger: base,
			Battery: &decorateCustomBatteryImpl{
				battery: battery,
			},
			ChargerEx: &decorateCustomChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateCustomIdentifierImpl{
				identifier: identifier,
			},
			PhaseController: &decorateCustomPhaseControllerImpl{
				phaseController: phaseController,
			},
			Resurrector: &decorateCustomResurrectorImpl{
				resurrector: resurrector,
			},
		}
	}

	return nil
}

type decorateCustomBatteryImpl struct {
	battery func() (float64, error)
}

func (impl *decorateCustomBatteryImpl) Soc() (float64, error) {
	return impl.battery()
}

type decorateCustomChargerExImpl struct {
	chargerEx func(float64) error
}

func (impl *decorateCustomChargerExImpl) MaxCurrentMillis(p0 float64) error {
	return impl.chargerEx(p0)
}

type decorateCustomIdentifierImpl struct {
	identifier func() (string, error)
}

func (impl *decorateCustomIdentifierImpl) Identify() (string, error) {
	return impl.identifier()
}

type decorateCustomPhaseControllerImpl struct {
	phaseController func(int) error
}

func (impl *decorateCustomPhaseControllerImpl) Phases1p3p(p0 int) error {
	return impl.phaseController(p0)
}

type decorateCustomResurrectorImpl struct {
	resurrector func() error
}

func (impl *decorateCustomResurrectorImpl) WakeUp() error {
	return impl.resurrector()
}
