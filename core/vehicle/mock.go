// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/evcc-io/evcc/core/vehicle (interfaces: API)

// Package vehicle is a generated GoMock package.
package vehicle

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockAPI is a mock of API interface.
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI.
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance.
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// GetMinSoc mocks base method.
func (m *MockAPI) GetMinSoc() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMinSoc")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetMinSoc indicates an expected call of GetMinSoc.
func (mr *MockAPIMockRecorder) GetMinSoc() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMinSoc", reflect.TypeOf((*MockAPI)(nil).GetMinSoc))
}

// GetPlanSoc mocks base method.
func (m *MockAPI) GetPlanSoc() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlanSoc")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetPlanSoc indicates an expected call of GetPlanSoc.
func (mr *MockAPIMockRecorder) GetPlanSoc() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlanSoc", reflect.TypeOf((*MockAPI)(nil).GetPlanSoc))
}

// GetPlanTime mocks base method.
func (m *MockAPI) GetPlanTime() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlanTime")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetPlanTime indicates an expected call of GetPlanTime.
func (mr *MockAPIMockRecorder) GetPlanTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlanTime", reflect.TypeOf((*MockAPI)(nil).GetPlanTime))
}

// SetMinSoc mocks base method.
func (m *MockAPI) SetMinSoc(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMinSoc", arg0)
}

// SetMinSoc indicates an expected call of SetMinSoc.
func (mr *MockAPIMockRecorder) SetMinSoc(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMinSoc", reflect.TypeOf((*MockAPI)(nil).SetMinSoc), arg0)
}

// SetPlanSoc mocks base method.
func (m *MockAPI) SetPlanSoc(arg0 time.Time, arg1 float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetPlanSoc", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetPlanSoc indicates an expected call of SetPlanSoc.
func (mr *MockAPIMockRecorder) SetPlanSoc(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPlanSoc", reflect.TypeOf((*MockAPI)(nil).SetPlanSoc), arg0, arg1)
}
