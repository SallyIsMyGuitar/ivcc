template: kostal-plenticore
products:
  - brand: Kostal
    description:
      generic: Plenticore Hybrid
capabilities: ["battery-control"]
linked:
  - template: kostal-ksem-inverter
    usage: grid
  - template: kostal-ksem
    usage: grid
    excludetemplate: kostal-ksem-inverter
requirements:
  description:
    de: |
      Nur ein System kann und darf auf den Wechselrichter zugreifen! Zur aktiven Batteriesteuerung muss die externe Batteriesteuerung über Modbus mit dem Handwerkerzugang aktiviert sein. Weiterhin muss die Modbus Kommunikation auf big-endian (ABCD) gestellt sein. Liest das Kostal Smart Energy Meter (KSEM) den Wechselrichter über Modbus TCP aus, ist dies dann nicht mehr möglich, da das KSEM nur little endian unterstützt. 
    en: |
      Only a single system may access the inverter! For active battery control, the external battery control via Modbus must be activated with the access for installers. Modbus communication must also be set to big-endian (ABCD). If the Kostal Smart Energy Meter (KSEM) reads the inverter via Modbus TCP, this is no longer possible as the KSEM only supports little endian.
params:
  - name: usage
    choice: ["pv", "battery"]
    allinone: true
  - name: modbus
    choice: ["tcpip"]
    id: 71
    port: 1502
  - name: endianness
    description:
      de: Byte-Reihenfolge (Little/Big)
      en: Endianness (Little/Big)
    validvalues: ["big", "little"]
    default: little
    advanced: true
  - name: capacity
    advanced: true
  # battery control
  - name: minsoc
    type: number
    advanced: true
  - name: maxsoc
    type: number
    advanced: true
  - name: watchdog
    type: duration
    default: 60s
    advanced: true
render: |
  {{- if eq .usage "pv" }}
  type: custom
  power:
    source: calc
    add: # The add plugin sums up all string values
    - source: modbus
      {{- include "modbus" . | indent 4 }}
      model: sunspec
      value: 160:1:DCW # string 1
    - source: modbus
      {{- include "modbus" . | indent 4 }}
      model: sunspec
      value: 160:2:DCW # string 2
    - source: modbus
      {{- include "modbus" . | indent 4 }}
      model: sunspec
      value: 160:3:DCW # string 3
  {{- end }}
  {{- if eq .usage "battery" }}
  type: custom
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    model: sunspec
    value: 802:W # 802 battery control
  soc:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    model: sunspec
    value: 802:SoC # 802 battery control
  limitsoc:
    source: watchdog
    timeout: {{ .watchdog }} # re-write at timeout/2
    set:
      source: modbus
      {{- include "modbus" . | indent 4 }}
      register:
        address: 1042 # limit soc
        type: writemultiple
        decode: {{ if (eq .endianness "big") }}float32{{ else }}float32s{{ end }}
  capacity: {{ .capacity }} # kWh
  minsoc: {{ .minsoc }} # %
  maxsoc: {{ .maxsoc }} # %
  {{- end }}
