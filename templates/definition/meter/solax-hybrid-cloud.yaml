template: solax-hybrid-cloud
products:
- brand: Solax
  description:
    generic: Hybrid (Cloud)
requirements:
  description:
    de: |
      Der Solax Inverter muss in der SolaxCloud angemeldet sein.

      **Achtung**: Die Werte können nur alle 150s abgerufen werden und dann auch 5 Minuten alt sein. Die Laderegelung nach PV kann hiermit nicht optimal gesteuert werden!
    en: |
      The Solax inverter has to be registered in the SolaxCloud.

      **Attention**: Values can only be fetched every 150s and then also can be 5 minutes old. Charging by PV will not be optimal because of this!
guidedsetup:
  enable: true
params:
- name: usage
  choice: [ "pv", "battery" ]
- name: tokenid
  required: true
  description:
    generic: SolaxCloud TokenID
  help:
    de: Auf http://solaxcloud.com im Haupmenü "Service" auswählen. Auf dieser Seite den Wert von "ObtaintokenID" hier eintragen.
    en: Go to http://solaxcloud.com and select "Service" in the main menu. Enter the value of "ObtaintokenID" in this field.
render: |
  type: custom
  power:
  {{- if eq .usage "pv" }}
    source: calc
    add:
    # Hybrid WR XXXXXXXXXXXXXX
    # DC MPPT1 + MPPT2
    - source: http
      uri: https://www.eu.solaxcloud.com:9443/proxy/api/getRealtimeInfo.do?tokenId={{ .tokenid }}
      jq: .result.powerdc1  # Solax API Inverter.DC.PV.power.MPPT1
      cache: 2m30s
    - source: http
      uri: https://www.eu.solaxcloud.com:9443/proxy/api/getRealtimeInfo.do?tokenId={{ .tokenid }}
      jq: .result.powerdc2  # Solax API Inverter.DC.PV.power.MPPT2
      cache: 2m30s
  {{- end }}
  {{- if eq .usage "battery" }}
    source: http
    uri: https://www.eu.solaxcloud.com:9443/proxy/api/getRealtimeInfo.do?tokenId={{ .tokenid }}
    jq: .result.batPower  # Solax API inverter.DC.battery.power.total
    scale: -1
    cache: 2m30s
  soc:
    source: http
    uri: https://www.eu.solaxcloud.com:9443/proxy/api/getRealtimeInfo.do?tokenId={{ .tokenid }}
    jq: .result.soc  # Solax API inverter.DC.battery.energy.SOC
    cache: 2m30s
  {{- end }}
