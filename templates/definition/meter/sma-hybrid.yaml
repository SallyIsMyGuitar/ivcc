template: sma-hybrid
products:
  - brand: SMA
    description:
      de: Smart Energy Hybrid-Wechselrichter
      en: Smart Energy Hybrid Inverter
capabilities: ["battery-control"]
params:
  - name: usage
    choice: ["pv", "battery"]
    allinone: true
  - name: modbus
    choice: ["tcpip"]
    port: 502
    id: 3
    help:
      en: The Modbus TCP-Server needs to be enabled on this Smart Energy inverter
      de: Der Modbus TCP-Server muss an diesem Smart Energy Wechselrichter aktiviert sein
  - name: capacity
    advanced: true
  - name: watchdog
    type: duration
    default: 60s
    advanced: true
render: |
  type: custom
  {{- if eq .usage "pv" }}
  power:
    source: calc
    add:
      - source: modbus
        {{- include "modbus" . | indent 6 }}
        register: # manual non-sunspec register configuration
          address: 30773 # SMA Modbus Profile: DC power input [1]
          type: holding
          decode: int32nan
      - source: modbus
        {{- include "modbus" . | indent 6 }}
        register: # manual non-sunspec register configuration
          address: 30961 # SMA Modbus Profile: DC power input [2]
          type: holding
          decode: int32nan
  {{- end }}
  {{- if eq .usage "battery" }}
  power:
    source: calc
    mul:
      - source: modbus
        {{- include "modbus" . | indent 6 }}
        register: # manual non-sunspec register configuration
          address: 30851 # SMA Modbus Profile: Battery voltage
          type: holding
          decode: uint32nan
        scale: 0.01
      - source: modbus
        {{- include "modbus" . | indent 6 }}
        register: # manual non-sunspec register configuration
          address: 30843 # SMA Modbus Profile: Battery current
          type: holding
          decode: int32nan
        scale: 0.001
  soc:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register: # manual non-sunspec register configuration
      address: 30845 # SMA Modbus Profile: Battery state of charge
      type: holding
      decode: uint32nan
  batterymode:
    source: watchdog
    timeout: {{ .watchdog }} # re-write at timeout/2
    reset: 1 # reset watchdog on normal
    set:
      source: switch
      switch:
      - case: 1 # normal
        set:
        - source: const
          value: 10000 # Maximale Wirkleistung
          set:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 44039 # Maximale Wirkleistung
              type: writesingle
              decode: int16
      - case: 2 # hold
        set:
        - source: const
          value: 0 # Maximale Wirkleistung
          set:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 44039 # Maximale Wirkleistung
              type: writesingle
              decode: int16
      - case: 3 # charge
        set:
        - source: const
          value: -10000 # Maximale Wirkleistung
          set:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 44039 # Maximale Wirkleistung
              type: writesingle
              decode: int16
  {{- if .capacity }}
  capacity: {{ .capacity }} # kWh
  {{- end }}
  {{- end }}
