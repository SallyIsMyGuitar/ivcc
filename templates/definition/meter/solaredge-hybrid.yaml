template: solaredge-hybrid
products:
  - brand: SolarEdge
    description:
      generic: Hybrid Inverter
requirements:
  description:
    de: |
      Nur ein System kann und darf auf den Wechselrichter zugreifen!
      FÃ¼r die optionale Batteriesteuerung muss StorageConf_CtrlMode (0xE004) auf 4 "Remote" stehen.
    en: |
      Only one system may access the inverter!
      For optional battery control, StorageConf_CtrlMode (0xE004) must be at 4 "Remote".
params:
  - name: usage
    choice: ["grid", "pv", "battery"]
    allinone: true
  - name: modbus
    choice: ["tcpip", "rs485"]
    id: 1
    port: 1502
  - name: timeout
  - name: capacity
    advanced: true
  - name: watchdog
    type: duration
    default: 60s
    advanced: true
render: |
  type: custom
  {{- if eq .usage "grid" }}
  power:
    source: sunspec
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    subdevice: 1 # Metering device
    value: 203:W
    scale: -1
  {{- end }}
  {{- if eq .usage "pv" }}
  power:
    source: calc
    add:
    - source: sunspec
      {{- include "modbus" . | indent 4 }}
      timeout: {{ .timeout }}
      value: 160:1:DCW
    - source: modbus
      {{- include "modbus" . | indent 4 }}
      timeout: {{ .timeout }}
      register:
        address: 62836 # Battery 1 Instantaneous Power
        type: holding
        decode: float32s
  {{- end }}
  {{- if eq .usage "battery" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 62836 # Battery 1 Instantaneous Power
      type: holding
      decode: float32s
    scale: -1
  soc:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 62852 # Battery 1 State of Energy (SOE)
      type: holding
      decode: float32s
  batterymode:
    source: sequence
    set:
    # set StorageConf_CtrlMode remote
    - source: map
      values:
        1: 1 # normal
        2: 4 # remote
        3: 4 # remote
      set:
        source: modbus
        {{- include "modbus" . | indent 6 }}
        timeout: {{ .timeout }}
        register:
          address: 0xE004 # StorageConf_CtrlMode
          type: writesingle
          encoding: uint16
    # set StorageRemoteCtrl_CommandMode with watchdog and discharge limit
    - source: map
      values:
        1: 7 # normal
        2: 77 # hold - this is actually 7 but we need a different value for the switch below
        3: 3 # charge
      set:
        source: watchdog
        reset: 7 # stop watchdog
        timeout: {{ .watchdog }} # re-write at timeout/2
        set:
          source: switch
          switch:
          # hold (77 -> 7)
          - case: 77
            set:
              source: sequence
              set:
              - source: const
                value: 7 # replace 77 with 7
                set:
                  source: modbus
                  {{- include "modbus" . | indent 16 }}
                  timeout: {{ .timeout }}
                  register:
                    address: 0xE00D # StorageRemoteCtrl_CommandMode
                    type: writesingle
                    encoding: uint16
              - source: const
                value: 0 # StorageRemoteCtrl_DischargeLimit
                set:
                  source: modbus
                  {{- include "modbus" . | indent 16 }}
                  timeout: {{ .timeout }}
                  register:
                    address: 0xe010 # StorageRemoteCtrl_DischargeLimit
                    type: writesingle
                    encoding: uint16
          # normal (1) or charge (3)
          default:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 0xE00D # StorageRemoteCtrl_CommandMode
              type: writesingle
              encoding: uint16
  {{- if .capacity }}
  capacity: {{ .capacity }} # kWh
  {{- end }}
  {{- end }}
