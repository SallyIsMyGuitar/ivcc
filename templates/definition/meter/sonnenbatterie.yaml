template: sonnenbatterie
covers: ["sonnenbatterie-eco10"]
products:
  - brand: Sonnen
    description:
      generic: sonnenBatterie
capabilities: ["battery-control"]
requirements:
  description:
    de: |
      Für die aktive Batteriesteuerung muss über das Webinterface der sonnenBatterie (unter Software-Integration) das "JSON Write API" aktiviert und das dort generierte API-Token in der Batteriekonfiguration unter `token` eingetragen werden.
    en: |
      For active battery control, the "JSON Write API" must be activated via the sonnenBatterie web interface (under Software-Integration) and the API token generated there must be entered in the battery configuration under `token`.
params:
  - name: usage
    choice: ["grid", "pv", "battery"]
    allinone: true
  - name: host
  - name: port
    default: 8080
  - name: capacity
    advanced: true
  - name: token
    required: false
    help:
      de: API Token (benötigt für aktive Batteriesteuerung)
      en: API Token (required for active battery control)
    usages: ["battery"]
  - name: backupbuffer
    required: false
    help:
      de: In der Batterie verbleibende Reserve-Kapazität (in %)
      en: default remaining battery charge (in %)
    default: 10
  - name: chargingbuffer
    required: false
    help:
      de: Maximaler Entladestand der Batterie während des evcc-Ladevorgangs
      en: Maximum discharge level of the SonnenBatterie during vehicle charging
    default: 50
render: |
  type: custom
  power:
    source: http
    uri: http://{{ .host }}:{{ .port }}/api/v1/status
  {{- if eq .usage "grid" }}
    jq: .GridFeedIn_W
    scale: -1 # reverse direction
  {{- end }}
  {{- if eq .usage "pv" }}
    jq: .Production_W
  {{- end }}
  {{- if eq .usage "battery" }}
    jq: .Pac_total_W
  soc:
    source: http
    uri: http://{{ .host }}:{{ .port }}/api/v1/status
    jq: .USOC
  {{- if .token }}
  batterymode:
    source: switch
    switch:
    - case: 1 # normal
      set:
        source: http
        uri: http://{{ .host }}/api/v2/configurations
        insecure: true
        method: PUT
        headers:
        - content-type: application/json
        - Auth-Token: {{ .token }}
        body: '{"EM_USOC":"{{ .backupbuffer }}"}'  # reset BackupBuffer to default
    - case: 2 # hold
      set:
        source: http
        uri: http://{{ .host }}/api/v2/configurations
        insecure: true
        method: PUT
        headers:
        - content-type: application/json
        - Auth-Token: {{ .token }}
        body: '{"EM_USOC":"{{ .chargingbuffer }}"}'  # increase BackupBuffer to desired percentage
    - case: 3 # charge
      set:
        source: http
        uri: http://{{ .host }}/api/v2/configurations
        insecure: true
        method: PUT
        headers:
        - content-type: application/json
        - Auth-Token: {{ .token }}
        body: '{"EM_USOC":"{{ .backupbuffer }}"}'  # set BackupBuffer to default
  {{- end }}
  {{- if .capacity }}
  capacity: {{ .capacity }} # kWh
  {{- end }}
  {{- end }}
