package smameter

import (
	"net"
	"reflect"
	"testing"
)

func TestListener_processUDPData(t *testing.T) {
	tests := []struct {
		name     string
		ip       net.IP
		port     int
		response []byte
		wantErr  bool
		want     SmaTelegramData
	}{
		{
			"SMA Home Manager - success",
			[]byte{192, 168, 1, 4},
			33168,
			[]byte{
				0x53, 0x4d, 0x41, 0x00, 0x00, 0x04, 0x02, 0xa0, 0x00, 0x00, 0x00, 0x01, 0x02, 0x4c, 0x00, 0x10,
				0x60, 0x69, 0x01, 0x74, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x79, 0xb9, 0x63, 0x00, 0x01, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9a, 0xc1, 0x2f, 0x28,
				0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x01, 0x7b, 0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x05,
				0x85, 0x61, 0x66, 0x80, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x01, 0x77, 0xbb, 0xd1, 0x90, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x1b, 0x17,
				0x00, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x05, 0x1c, 0xea, 0x4c, 0x98, 0x00, 0x09, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x08, 0x00, 0x00, 0x00, 0x00, 0x04, 0x35, 0xe1, 0xe4, 0x00,
				0x00, 0x0a, 0x04, 0x00, 0x00, 0x00, 0x1b, 0x22, 0x00, 0x0a, 0x08, 0x00, 0x00, 0x00, 0x00, 0x07,
				0xd1, 0x54, 0xcd, 0xc8, 0x00, 0x0d, 0x04, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x0e, 0x04, 0x00,
				0x00, 0x00, 0xc3, 0x50, 0x00, 0x15, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x01, 0x70, 0x4b, 0x83, 0xb0, 0x00, 0x16, 0x04, 0x00, 0x00, 0x00, 0x01, 0x1e,
				0x00, 0x16, 0x08, 0x00, 0x00, 0x00, 0x00, 0x05, 0x66, 0x12, 0xc5, 0x08, 0x00, 0x17, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x37, 0xec, 0x68,
				0x00, 0x18, 0x04, 0x00, 0x00, 0x00, 0x14, 0x64, 0x00, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02,
				0x20, 0x3b, 0x02, 0xa0, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x02, 0x20, 0x65, 0xfa, 0x50, 0x00, 0x1e, 0x04, 0x00, 0x00, 0x00, 0x14, 0x6b,
				0x00, 0x1e, 0x08, 0x00, 0x00, 0x00, 0x00, 0x06, 0x11, 0x8d, 0x2a, 0x40, 0x00, 0x1f, 0x04, 0x00,
				0x00, 0x00, 0x09, 0xf5, 0x00, 0x20, 0x04, 0x00, 0x00, 0x03, 0xa8, 0xf3, 0x00, 0x21, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x37, 0x00, 0x29, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x01, 0x5c, 0x87, 0xe4, 0x90, 0x00, 0x2a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x38,
				0x00, 0x2a, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x4a, 0x41, 0xd0, 0xc0, 0x00, 0x2b, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x95, 0x17, 0x47, 0x48,
				0x00, 0x2c, 0x04, 0x00, 0x00, 0x00, 0x01, 0xf9, 0x00, 0x2c, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02,
				0x08, 0xf0, 0x1a, 0x90, 0x00, 0x31, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x01, 0xf6, 0x0b, 0xe2, 0x38, 0x00, 0x32, 0x04, 0x00, 0x00, 0x00, 0x01, 0xfc,
				0x00, 0x32, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02, 0x2d, 0x8f, 0x04, 0x88, 0x00, 0x33, 0x04, 0x00,
				0x00, 0x00, 0x01, 0x8d, 0x00, 0x34, 0x04, 0x00, 0x00, 0x03, 0xa6, 0xb4, 0x00, 0x35, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x6f, 0x00, 0x3d, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x00, 0xcf, 0x2b, 0x4b, 0xc8, 0x00, 0x3e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x25,
				0x00, 0x3e, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0x4a, 0x54, 0x30, 0x00, 0x3f, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x69, 0xbf, 0xe8,
				0x00, 0x40, 0x04, 0x00, 0x00, 0x00, 0x04, 0xbb, 0x00, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x08, 0xbc, 0x51, 0x70, 0x00, 0x45, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x01, 0xa2, 0x02, 0x34, 0x08, 0x00, 0x46, 0x04, 0x00, 0x00, 0x00, 0x04, 0xbb,
				0x00, 0x46, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xee, 0x6d, 0xbe, 0x30, 0x00, 0x47, 0x04, 0x00,
				0x00, 0x00, 0x02, 0x66, 0x00, 0x48, 0x04, 0x00, 0x00, 0x03, 0xa8, 0x0f, 0x00, 0x49, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x1e, 0x90, 0x00, 0x00, 0x00, 0x02, 0x03, 0x05, 0x52, 0x00, 0x00, 0x00, 0x00,
			},
			false,
			SmaTelegramData{
				Addr:   "192.168.1.4",
				Serial: "0",
				Data: []SmaObisCodeValue{
					{ObisCode: "1:1.4.0", Value: 0}, {ObisCode: "1:1.8.0", Value: 6.89131908e+09},
					{ObisCode: "1:2.4.0", Value: 37.9}, {ObisCode: "1:2.8.0", Value: 2.371258944e+10},
					{ObisCode: "1:3.4.0", Value: 0}, {ObisCode: "1:3.8.0", Value: 6.30376488e+09},
					{ObisCode: "1:4.4.0", Value: 693.5}, {ObisCode: "1:4.8.0", Value: 2.195995356e+10},
					{ObisCode: "1:9.4.0", Value: 0}, {ObisCode: "1:9.8.0", Value: 1.80838656e+10},
					{ObisCode: "1:10.4.0", Value: 694.6}, {ObisCode: "1:10.8.0", Value: 3.357676692e+10},
					{ObisCode: "1:13.4.0", Value: 0.055},
					{ObisCode: "1:21.4.0", Value: 0}, {ObisCode: "1:21.8.0", Value: 6.1789644e+09},
					{ObisCode: "1:22.4.0", Value: 28.6}, {ObisCode: "1:22.8.0", Value: 2.31873426e+10},
					{ObisCode: "1:23.4.0", Value: 0}, {ObisCode: "1:23.8.0", Value: 1.93304484e+09},
					{ObisCode: "1:24.4.0", Value: 522}, {ObisCode: "1:24.8.0", Value: 9.1306728e+09},
					{ObisCode: "1:29.4.0", Value: 0}, {ObisCode: "1:29.8.0", Value: 9.13348872e+09},
					{ObisCode: "1:30.4.0", Value: 522.7}, {ObisCode: "1:30.8.0", Value: 2.606426784e+10},
					{ObisCode: "1:31.4.0", Value: 2.549},
					{ObisCode: "1:32.4.0", Value: 239.859},
					{ObisCode: "1:41.4.0", Value: 0}, {ObisCode: "1:41.8.0", Value: 5.84737704e+09},
					{ObisCode: "1:42.4.0", Value: 5.6000000000000005}, {ObisCode: "1:42.8.0", Value: 5.54079456e+09},
					{ObisCode: "1:43.4.0", Value: 0}, {ObisCode: "1:43.8.0", Value: 2.50133076e+09},
					{ObisCode: "1:44.4.0", Value: 50.5}, {ObisCode: "1:44.8.0", Value: 8.73988776e+09},
					{ObisCode: "1:49.4.0", Value: 0}, {ObisCode: "1:49.8.0", Value: 8.42294124e+09},
					{ObisCode: "1:50.4.0", Value: 50.800000000000004}, {ObisCode: "1:50.8.0", Value: 9.35428212e+09},
					{ObisCode: "1:51.4.0", Value: 0.397},
					{ObisCode: "1:52.4.0", Value: 239.284},
					{ObisCode: "1:61.4.0", Value: 0}, {ObisCode: "1:61.8.0", Value: 3.47572116e+09},
					{ObisCode: "1:62.4.0", Value: 3.7}, {ObisCode: "1:62.8.0", Value: 3.59519544e+09},
					{ObisCode: "1:63.4.0", Value: 0}, {ObisCode: "1:63.8.0", Value: 2.22152292e+09},
					{ObisCode: "1:64.4.0", Value: 121.10000000000001}, {ObisCode: "1:64.8.0", Value: 4.44152664e+09},
					{ObisCode: "1:69.4.0", Value: 0}, {ObisCode: "1:69.8.0", Value: 7.01302068e+09},
					{ObisCode: "1:70.4.0", Value: 121.10000000000001}, {ObisCode: "1:70.8.0", Value: 4.00016952e+09},
					{ObisCode: "1:71.4.0", Value: 0.614},
					{ObisCode: "1:72.4.0", Value: 239.631},
					{ObisCode: "144:0.0.0", Value: 3.3752402e+07},
				},
			},
		},
		{
			"SMA Energy Manager - success",
			[]byte{192, 168, 1, 4},
			33168,
			[]byte{
				0x53, 0x4d, 0x41, 0x00, 0x00, 0x04, 0x02, 0xa0, 0x00, 0x00, 0x00, 0x01, 0x02, 0x44, 0x00, 0x10,
				0x60, 0x69, 0x01, 0x5d, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x79, 0xba, 0x32, 0x00, 0x01, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x61, 0xcd, 0x60,
				0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x08, 0xac, 0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x09,
				0xa2, 0x63, 0x4e, 0xc0, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x63, 0x57, 0x7c, 0xc8, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x00, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x56, 0x41, 0x9e, 0xc8, 0x00, 0x09, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x51, 0x3b, 0x20,
				0x00, 0x0a, 0x04, 0x00, 0x00, 0x00, 0x08, 0xac, 0x00, 0x0a, 0x08, 0x00, 0x00, 0x00, 0x00, 0x09,
				0xed, 0x57, 0xc3, 0xc0, 0x00, 0x0d, 0x04, 0x00, 0x00, 0x00, 0x03, 0xe8, 0x00, 0x15, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xa2, 0x73, 0x88,
				0x00, 0x16, 0x04, 0x00, 0x00, 0x00, 0x05, 0x20, 0x00, 0x16, 0x08, 0x00, 0x00, 0x00, 0x00, 0x07,
				0x7d, 0x59, 0x22, 0xf0, 0x00, 0x17, 0x04, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x17, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x20, 0xd6, 0xb0, 0x58, 0x00, 0x18, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8a, 0x16, 0x93, 0x80, 0x00, 0x1d, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x58, 0x9a, 0xe8,
				0x00, 0x1e, 0x04, 0x00, 0x00, 0x00, 0x05, 0x20, 0x00, 0x1e, 0x08, 0x00, 0x00, 0x00, 0x00, 0x07,
				0x91, 0xf3, 0x65, 0xe0, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x00, 0x02, 0x8e, 0x00, 0x20, 0x04, 0x00,
				0x00, 0x03, 0xa8, 0xdc, 0x00, 0x21, 0x04, 0x00, 0x00, 0x00, 0x03, 0xe8, 0x00, 0x29, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf1, 0xb0,
				0x00, 0x2a, 0x04, 0x00, 0x00, 0x00, 0x01, 0xc1, 0x00, 0x2a, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x12, 0x13, 0x13, 0x30, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x21, 0xf4, 0xf7, 0x10, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x07,
				0x00, 0x2c, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0xde, 0x75, 0x90, 0x00, 0x31, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x28, 0xa4, 0x20,
				0x00, 0x32, 0x04, 0x00, 0x00, 0x00, 0x01, 0xc1, 0x00, 0x32, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x78, 0x16, 0x49, 0x18, 0x00, 0x33, 0x04, 0x00, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x34, 0x04, 0x00,
				0x00, 0x03, 0xa6, 0xb3, 0x00, 0x35, 0x04, 0x00, 0x00, 0x00, 0x03, 0xe8, 0x00, 0x3d, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x71, 0x38,
				0x00, 0x3e, 0x04, 0x00, 0x00, 0x00, 0x01, 0xcb, 0x00, 0x3e, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x13, 0x47, 0x1e, 0xe0, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x08, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x21, 0x45, 0x0d, 0x50, 0x00, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 0x0c,
				0x00, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x05, 0xcc, 0x40, 0x00, 0x45, 0x04, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x95, 0xe0, 0x30,
				0x00, 0x46, 0x04, 0x00, 0x00, 0x00, 0x01, 0xcb, 0x00, 0x46, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x5e, 0xad, 0xe3, 0xf0, 0x00, 0x47, 0x04, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x48, 0x04, 0x00,
				0x00, 0x03, 0xa7, 0xa9, 0x00, 0x49, 0x04, 0x00, 0x00, 0x00, 0x03, 0xe8, 0x90, 0x00, 0x00, 0x00,
				0x02, 0x00, 0x12, 0x52, 0x00, 0x00, 0x00, 0x00,
			},
			false,
			SmaTelegramData{
				Addr:   "192.168.1.4",
				Serial: "0",
				Data: []SmaObisCodeValue{
					{ObisCode: "1:1.4.0", Value: 0}, {ObisCode: "1:1.8.0", Value: 1.2385008e+08},
					{ObisCode: "1:2.4.0", Value: 222}, {ObisCode: "1:2.8.0", Value: 4.137912288e+10},
					{ObisCode: "1:3.4.0", Value: 0}, {ObisCode: "1:3.8.0", Value: 1.66667796e+09},
					{ObisCode: "1:4.4.0", Value: 0.1}, {ObisCode: "1:4.8.0", Value: 5.74210836e+09},
					{ObisCode: "1:9.4.0", Value: 0}, {ObisCode: "1:9.8.0", Value: 4.41773136e+09},
					{ObisCode: "1:10.4.0", Value: 222}, {ObisCode: "1:10.8.0", Value: 4.26366576e+10},
					{ObisCode: "1:13.4.0", Value: 1},
					{ObisCode: "1:21.4.0", Value: 0}, {ObisCode: "1:21.8.0", Value: 1.2808692e+08},
					{ObisCode: "1:22.4.0", Value: 131.20000000000002}, {ObisCode: "1:22.8.0", Value: 3.216776472e+10},
					{ObisCode: "1:23.4.0", Value: 1.8}, {ObisCode: "1:23.8.0", Value: 5.5094076e+08},
					{ObisCode: "1:24.4.0", Value: 0}, {ObisCode: "1:24.8.0", Value: 2.31673536e+09},
					{ObisCode: "1:29.4.0", Value: 0}, {ObisCode: "1:29.8.0", Value: 1.8680778e+09},
					{ObisCode: "1:30.4.0", Value: 131.20000000000002}, {ObisCode: "1:30.8.0", Value: 3.251341872e+10},
					{ObisCode: "1:31.4.0", Value: 0.654},
					{ObisCode: "1:32.4.0", Value: 239.836},
					{ObisCode: "1:41.4.0", Value: 0}, {ObisCode: "1:41.8.0", Value: 258480},
					{ObisCode: "1:42.4.0", Value: 44.900000000000006}, {ObisCode: "1:42.8.0", Value: 4.59820728e+09},
					{ObisCode: "1:43.4.0", Value: 0}, {ObisCode: "1:43.8.0", Value: 5.6970216e+08},
					{ObisCode: "1:44.4.0", Value: 0.7000000000000001}, {ObisCode: "1:44.8.0", Value: 1.72585512e+09},
					{ObisCode: "1:49.4.0", Value: 0}, {ObisCode: "1:49.8.0", Value: 6.977232e+07},
					{ObisCode: "1:50.4.0", Value: 44.900000000000006}, {ObisCode: "1:50.8.0", Value: 6.30969372e+09},
					{ObisCode: "1:51.4.0", Value: 0.245},
					{ObisCode: "1:52.4.0", Value: 239.28300000000002},
					{ObisCode: "1:61.4.0", Value: 0}, {ObisCode: "1:61.8.0", Value: 749880},
					{ObisCode: "1:62.4.0", Value: 45.900000000000006}, {ObisCode: "1:62.8.0", Value: 4.61839536e+09},
					{ObisCode: "1:63.4.0", Value: 0}, {ObisCode: "1:63.8.0", Value: 5.5817352e+08},
					{ObisCode: "1:64.4.0", Value: 1.2000000000000002}, {ObisCode: "1:64.8.0", Value: 1.711656e+09},
					{ObisCode: "1:69.4.0", Value: 0}, {ObisCode: "1:69.8.0", Value: 4.9636152e+08},
					{ObisCode: "1:70.4.0", Value: 45.900000000000006}, {ObisCode: "1:70.8.0", Value: 5.88342168e+09},
					{ObisCode: "1:71.4.0", Value: 0.231},
					{ObisCode: "1:72.4.0", Value: 239.529},
					{ObisCode: "144:0.0.0", Value: 3.3559122e+07},
				},
			},
		},
	}
	for _, tc := range tests {
		t.Run(tc.name, func(t *testing.T) {
			l := &Listener{}

			buffer := tc.response
			numBytes := len(buffer)
			src := &net.UDPAddr{IP: tc.ip, Port: tc.port}

			got, err := l.processUDPData(numBytes, src, buffer)
			if (err != nil) != tc.wantErr {
				t.Errorf("Listener.processUDPData() error = %v, wantErr %v", err, tc.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tc.want) {
				t.Errorf("Listener.processUDPData() = %v, want %v", got, tc.want)
			}

		})
	}
}
