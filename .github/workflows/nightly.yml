name: Nightly Build

on:
  schedule: # runs on the default branch: master
    - cron: "0 2 * * *" # run at 2 AM UTC
  workflow_dispatch:

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3
      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  call-build-workflow:
    name: Call Build
    needs: check_date
    if: |
      ${{ needs.check_date.outputs.should_run != 'false' }}
      && startsWith(github.ref, 'refs/heads/master')
      && ! contains(github.head_ref, 'refs/heads/chore/')
    uses: evcc-io/evcc/.github/workflows/default.yml@master

  docker:
    name: Publish Docker :nightly
    needs:
      - call-build-workflow
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: refs/heads/master # force master
          fetch-depth: 0

      - name: Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v6
          push: true
          tags: |
            andig/evcc:nightly

  apt:
    name: Publish APT nightly
    needs:
      - call-build-workflow
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version: ^1.18
          cache: true
        id: go

      - name: Install Cloudsmith CLI
        run: pip install --upgrade cloudsmith-cli

      - name: Create nightly build
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: --snapshot -f .goreleaser-nightly.yml --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish .deb to Cloudsmith
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        run: make apt-nightly
        
  hassio:
    name: Create Hassio Addon Nightly
    needs:
      - docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Update version
        # uses: pocket-apps/action-update-version@v1
        # with:
        #   files: "packaging/hassio/config-nightly.json"
        #   version-regexp: '\d+.\d+.\d+'
        #   branch-name: master
        #   author-name: evcc-io
        #run: |
        #  sed -i -e s#0.0.0#$(echo ${{ env.GITHUB_REF }} | sed -e s#refs/tags/##)# packaging/hassio/config-nightly.json
        
        run: |
          export RELEASE_VERSION=$(echo ${{ github.ref }} | sed -e s#refs/tags/v##)
          echo "$RELEASE_VERSION"
          sed -e s#0.0.0#$RELEASE_VERSION# packaging/hassio/config-nightly.json
          
      - name: Copy config to hassio-addon
        uses: andstor/copycat-action@v3
        with:
          personal_token: ${{ secrets.GH_TOKEN }}
          src_path: packaging/hassio/config-nightly.json
          dst_path: /evcc-nightly/config.json
          dst_owner: evcc-io
          dst_repo_name: hassio-addon
