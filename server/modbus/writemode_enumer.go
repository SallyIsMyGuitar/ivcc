// Code generated by "enumer -type WriteMode -trimprefix WriteMode -transform=lower"; DO NOT EDIT.

package modbus

import (
	"fmt"
	"strings"
)

const _WriteModeName = "normalreadonlyaccept"

var _WriteModeIndex = [...]uint8{0, 6, 14, 20}

const _WriteModeLowerName = "normalreadonlyaccept"

func (i WriteMode) String() string {
	i -= 1
	if i < 0 || i >= WriteMode(len(_WriteModeIndex)-1) {
		return fmt.Sprintf("WriteMode(%d)", i+1)
	}
	return _WriteModeName[_WriteModeIndex[i]:_WriteModeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _WriteModeNoOp() {
	var x [1]struct{}
	_ = x[WriteModeNormal-(1)]
	_ = x[WriteModeReadOnly-(2)]
	_ = x[WriteModeAccept-(3)]
}

var _WriteModeValues = []WriteMode{WriteModeNormal, WriteModeReadOnly, WriteModeAccept}

var _WriteModeNameToValueMap = map[string]WriteMode{
	_WriteModeName[0:6]:        WriteModeNormal,
	_WriteModeLowerName[0:6]:   WriteModeNormal,
	_WriteModeName[6:14]:       WriteModeReadOnly,
	_WriteModeLowerName[6:14]:  WriteModeReadOnly,
	_WriteModeName[14:20]:      WriteModeAccept,
	_WriteModeLowerName[14:20]: WriteModeAccept,
}

var _WriteModeNames = []string{
	_WriteModeName[0:6],
	_WriteModeName[6:14],
	_WriteModeName[14:20],
}

// WriteModeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func WriteModeString(s string) (WriteMode, error) {
	if val, ok := _WriteModeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _WriteModeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to WriteMode values", s)
}

// WriteModeValues returns all values of the enum
func WriteModeValues() []WriteMode {
	return _WriteModeValues
}

// WriteModeStrings returns a slice of all String values of the enum
func WriteModeStrings() []string {
	strs := make([]string, len(_WriteModeNames))
	copy(strs, _WriteModeNames)
	return strs
}

// IsAWriteMode returns "true" if the value is listed in the enum definition. "false" otherwise
func (i WriteMode) IsAWriteMode() bool {
	for _, v := range _WriteModeValues {
		if i == v {
			return true
		}
	}
	return false
}
